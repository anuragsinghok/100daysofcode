# lambda functions
#  it is used for small functions 
# and when you pass functions as arguement

# Lambda Functions in Python
# In Python, a lambda function is a small anonymous function without a name.
# It is defined using the lambda keyword and has the following syntax:

# Lambda arguments: expresstion

# def double(x):
#     return x*2
#  or

double = lambda x:x*2
cube = lambda x: x*x*x
avg = lambda x,y: (x+y)/2
print(double(5))
print(cube(3))
print(avg(4,5))




# Lambda functions are often used in situations where a small function is required for a short period of time. They are commonly used as arguments to higher-order functions, such as map, filter, and reduce.
# Here is an example of how to use a lambda function:
#Function to double the input 
def double(x):
    return x * 2
# Lambda function to double the input
lambda x: x * 2
# The above lambda function has the same functionality as the double function defined earlier. However, the lambda function is anonymous, as it does not have a name.
# Lambda functions can have multiple arguments, just like regular functions.

# Here is an example of a lambda function with multiple arguement:


# passing a function another function or function as a arguement

def app(fx ,value):
    return 6 +fx(value)
print(app(cube,2))

# we can use anonymous function like with giving a name a function we can use it like this:
lambda x: x*x
print(app(lambda x: x*x,2))
