# Constructors
# A constructor is a special method in a class used to create and initialize an object of a class. There are different types of constructors. Constructor is invoked automatically when an object of a class is created.
# A constructor is a unique function that gets called automatically when an object is created of a class. The main purpose of a constructor is to initialize or assign values to the data members of that class. It cannot return any value other than None.
class person:
   

    def __init__(self,n,o) : # it is a construtor
        print("Hey i am a person") 
        self.name = n
        self.occ = o
        

    def info(self): # it is mandatory to give self arguement to a method inside a class of when you define a method inside a class
        print(f" {self.name} is a {self.occ}")


# a = person()
a = person("divya","hr")# when i m calling this n and o value is automatically palced in construtor
b = person("diva","manager") # when we this obejct is already passed  as self you need to write name and occ rest ignore , here b (object) is passed as self  it is automaticallly passed
a.info()
b.info()


# Types of Constructors in Python


# 1. Parameterized Constructor
# 2. Default Constructor
# Parameterized Constructor in Python
# When the constructor accepts arguments along with self, it is known as parameterized constructor.
# These arguments can be used inside the class to assign the values to the data members. 
# example is on top 

# Default Constructor in Python

# When the constructor doesn't accept any arguments from the object and has only one argument, self, in the constructor, it is known as a Default constructor.
# it only take self 
#  Example:
# Class Details:
#     def _init_(self):
#        print("animal Crab belongs to Crustaceans group")
# obj1 =Detail()
